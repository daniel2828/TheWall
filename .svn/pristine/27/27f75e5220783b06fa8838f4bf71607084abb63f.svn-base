
var Oauth;
OAuth.initialize('XlDJtEUxuXdSEwD4Zblo9CAyPRs');


var app = app || {};

//Espacio de nombres
app.main = {};
app.navegacion = {};
app.utils = {};
app.ajax = {};
app.visual = {};




app.main = {
    site_URL: "/ws.svc/",
    //site_URL: "http://private-47d38-socialmediawalls.apiary-mock.com/",
    actualRSfacebook: 1,
    actualRStwitter: 2,
    actualRSinstagram: 3,
    actualRSyoutube: 4,
    IDfacebookActualCM: null,
    IDtwitterActualCM: null,
    IDinstagramActualCM: null,
    IDYoutubeActualCM: null,
    numSegidoresFB: 0,
    numSubscriptoresYT: 0,
    numSuscriptIN: 0,
    activebtnFB: false,
    activebtnTW: false,
    activebtnIN: false,
    activebtnYT: false,
    tempArrayPosts: new Array(),
    tempArrayTwitts: new Array(),
    tempArrayInstagram: new Array(),
    tempArrayYoutTube: new Array(),
    motivoFail: 0,
    motivoExito: 1,
    motivoAbort: 2,
    motivoMaxPeticion: 3,
    responseTwitter: null,
    responseInstagram: null,
    countFB: 0,
    countTW: 0,
    countIN: 0,
    countYT: 0,
    //YT client ID 
    //
    ytApikey: "AIzaSyCrvFQeILHPjtK4NDV1kjYb4E0mG5jRt1c",
//    OAUTH2_CLIENT_ID: '13942950680-23v2mardietm45ld09en42epbtu0stbn.apps.googleusercontent.com',
//    OAUTH2_SCOPES: ['https://www.googleapis.com/auth/youtube'],
    init: function () {
        setTimeout(app.main.initYT, 1000);
        this.programarBottones();
        //console.log("init");
    },
    programarBottones: function () {
//        app.utils.trace("programar bottones");

        $(".btnConnectFB").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var bloque = $(".btnConnectFB").parent();

            if ($(this).parent().hasClass("connected")) {
                app.visual.mostrarStatusBtn(bloque, "alert", "Abort to traking the data");
                app.main.activebtnFB = false;

                app.ajax.guardarActividad(app.main.IDfacebookActualCM, app.main.actualRSfacebook, app.main.tempArrayPosts, function () {
                    app.ajax.cerrarTarea(app.main.actualRSfacebook, app.main.IDfacebookActualCM, app.main.motivoAbort);
                });
            } else {
                app.main.activebtnFB = true;
                app.visual.mostrarStatusBtn(bloque, "on", TEXTOS.T01);
                app.main.loginFacebook();
            }
        });


        $(".btnConnectTW").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var bloque = $(".btnConnectTW").parent();

            if ($(this).parent().hasClass("connected")) {
                app.visual.mostrarStatusBtn(bloque, "alert", "Abort to traking the data");
                app.main.activebtnTW = false;
                app.ajax.guardarActividad(app.main.IDtwitterActualCM, app.main.actualRStwitter, app.main.tempArrayTwitts, function () {
                    app.ajax.cerrarTarea(app.main.actualRStwitter, app.main.IDtwitterActualCM, app.main.motivoAbort);
                });
            } else {
//                console.log("activamos btn");
                app.main.activebtnTW = true;
                app.visual.mostrarStatusBtn(bloque, "on", TEXTOS.T01);
                app.main.loginTwitter();
            }
        });

        $(".btnConnectIN").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var bloque = $(".btnConnectIN").parent();
            if ($(this).parent().hasClass("connected")) {
                app.visual.mostrarStatusBtn(bloque, "alert", "Abort to traking the data");
                app.main.activebtnIN = false;
                app.ajax.guardarActividad(app.main.IDinstagramActualCM, app.main.actualRSinstagram, app.main.tempArrayInstagram, function () {
                    app.ajax.cerrarTarea(app.main.actualRSinstagram, app.main.IDinstagramActualCM, app.main.motivoAbort);

                });
            } else {
                app.main.activebtnIN = true;
                app.visual.mostrarStatusBtn(bloque, "on", TEXTOS.T01);
                app.main.loginInstagram();
            }
        });
        $(".btnConnectYT").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var bloque = $(".btnConnectYT").parent();
            if ($(this).parent().hasClass("connected")) {
                app.visual.mostrarStatusBtn(bloque, "alert", "Abort to traking the data");
                app.main.activebtnYT = false;
                app.ajax.guardarActividad(app.main.IDYoutubeActualCM, app.main.actualRSyoutube, app.main.tempArrayYoutTube, function () {
                    app.ajax.cerrarTarea(app.main.actualRSinstagram, app.main.IDYoutubeActualCM, app.main.motivoAbort);

                });
            } else {
                app.main.activebtnYT = true;
                app.visual.mostrarStatusBtn(bloque, "on", TEXTOS.T01);
                app.visual.pedirTareasRS(app.main.actualRSyoutube);
            }
        });

        $(".fbStatusIcon").on("click", function () {
            $(".btnConnectFB").trigger("click");
        });
        $(".twStatusIcon").on("click", function () {
            $(".btnConnectTW").trigger("click");
        });
        $(".inStatusIcon").on("click", function () {
            $(".btnConnectIN").trigger("click");
        });
        $(".ytStatusIcon ").on("click", function () {
            $(".btnConnectYT").trigger("click");
        });

    },
    loginFacebook: function () {
        FB.login(function () {
            app.main.getStatusLogin();
        }, {scope: 'publish_actions, user_likes'});
    },
    getStatusLogin: function () {
        FB.getLoginStatus(function (response) {
            if (response.status === 'connected') {
//                console.log("connectado");
                app.visual.pedirTareasRS(app.main.actualRSfacebook);
            } else if (response.status === 'not_authorized') {
//                console.log("Please log into this app.");
                app.visual.mostrarStatusBtn($(".btnConnectFB").parent(), "alert", "not authorized to perform operation...");
            } else {
//                console.log("Please log into Facebook");
                app.visual.mostrarStatusBtn($(".btnConnectFB").parent(), "alert", "An error has occurred");
            }
        });
    },
    facebookGetNumSegidores: function (idCM, callback) {
        //var a = '/' + idCM + '?fields=likes';
//        console.log(a);
        FB.api('/' + idCM + '?fields=likes', function (response) {
//           app.main.numSegidoresFB = response.likes;
            if (!!callback) {
                callback(response);
            }
        });
    },
    crearURlFacebook: function (idCM, tipoRS, lastID) {
        //lastID para facebook viene como fecha del ultimoPost
        //habre que convertirla a dateStamp
        ///  console.log("lastID " + lastID);
        var url;
        if (lastID == "" || lastID == null || lastID == 0) {
            url = '/' + idCM + '/posts?fields=updated_time,created_time,message,comments.summary(true),likes.summary(true),link,full_picture,source,type,shares&limit=100';
            // console.log("sin ultimo post")
        } else {
            //distinto token a facebook
            url = '/' + idCM + '/posts?fields=updated_time,created_time,message,comments.summary(true),likes.summary(true),link,full_picture,source,type,shares&limit=100&until=' + lastID;
            //1393245584230208/posts?fields=updated_time,created_time,message,comments,likes,link,picture,source,type,shares&limit=100&until=1426806615
            // console.log("hay ultimo post" + lastID);
        }
        if (app.main.activebtnFB) {
            app.main.getDatos(url, idCM, tipoRS, lastID, false);
        }
    },
    getDatos: function (url, idCM, tipoRS, lastID, paginado) {

        if (!paginado) {
            app.main.facebookGetNumSegidores(idCM, function (data) {
                // console.log(data);

                app.main.numSegidoresFB = data.likes;
                app.main.arastrarDatosFacebook(url, idCM, tipoRS, lastID);
//                app.utils.trace("numSegidores " + app.main.numSegidoresFB);
            });


        } else {
            app.main.arastrarDatosFacebook(url, idCM, tipoRS, lastID);
        }
    },
    arastrarDatosFacebook: function (url, idCM, tipoRS, lastID) {
        // console.log("url" + url, "idCM " + idCM, "tipoRS " + tipoRS, "lastID " + lastID);
        FB.api(url, function (response) {
            if (!response || response.error) {
                // console.log('Error facebook');
                //console.log(response.error);
                //app.visual.mostrarStatusBtn($(".btnConnectFB").parent(), "off", "");
                if (response.error.code == 4) {
                    //console.log("Application request limit reached");
                    //  4 Application request limit reached
                    //pedimos entonces otra tarea
                    app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoMaxPeticion);
                    setTimeout(function () {
                        app.visual.pedirTareasRS(app.main.actualRSfacebook);
                    }, 600000);
                } else {
                    app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoFail);
                    app.visual.pedirTareasRS(app.main.actualRSfacebook);
                }
            } else {
                // console.log(response);
                //console.log('RESPONSE DE FACEBOOK');

                app.main.tempArrayPosts = [];

//            console.log("facebook done");
//            console.log(response);
                if (app.main.activebtnFB) {
                    $(".btnConnectFB").parent().find(".txtStatus").text(TEXTOS.T02);
                }
                //creamos una array donde va a venir los datos de los posts
                var len = response.data.length;
                for (var i = 0; i < len; i++) {


                    app.main.countFB = app.main.countFB + 1;
                    $(".countFB").text(app.main.countFB);


                    var objPost = {
                        codigoPost: "",
                        texto: "",
                        numSharer: 0,
                        numLikes: 0,
                        numComentarios: 0,
                        fecha: "",
                        numAmigosCM: app.main.numSegidoresFB,
                        postUrl: "",
                        multimedia: "",
                        tipoPost: "",
                        nextPageToken: ""

                    };
                    //               app.utils.trace("recoremos array");

                    if (!!response.data[i].message) {
                        objPost.texto = response.data[i].message;
                    }

                    if (!!response.data[i].shares) {
                        objPost.numSharer = parseInt(response.data[i].shares.count);
                    }

                    if (!!response.data[i].likes) {
                        objPost.numLikes = parseInt(response.data[i].likes.summary.total_count);
                    }

                    if (!!response.data[i].comments) {
                        objPost.numComentarios = parseInt(response.data[i].comments.summary.total_count);
                    }

                    if (response.data[i].type == "video") {
                        //video
                        //objPost.tipoPost = "photo";
                        objPost.multimedia = response.data[i].full_picture;
                    } else if (response.data[i].type == "photo") {
                        //photo
                        objPost.multimedia = response.data[i].full_picture;
                    }


                    objPost.tipoPost = response.data[i].type;
                    objPost.codigoPost = response.data[i].id;
                    objPost.fecha = app.utils.convertirFecha(response.data[i].created_time);
                    var ids = objPost.codigoPost.split("_");
                    objPost.postUrl = "https://www.facebook.com/permalink.php?story_fbid=" + ids[1] + "&id=" + ids[0];
                    //numAmigosCM: response.data(i).message

                    app.main.tempArrayPosts.push(objPost);
                }
//            console.log("len " + len);

                if (len != 0 || len != "") {
                    app.ajax.guardarActividad(parseInt(idCM), parseInt(tipoRS), app.main.tempArrayPosts, function () {
                        //pedimos siguintes 100 posts
                        //console.log("next page");
                        //console.log(response.paging.next);
                        //hay paginas mas
                        var urlNextFull = response.paging.next;
                        //tenemos encontrar donde cortar la url next
                        //var pos = urlNextFull.indexOf(idCM);
                        //var urlNext = urlNextFull.substr(parseInt(pos) - 1);
                        var urlNext = urlNextFull.replace("https://graph.facebook.com/v2.5", "");


                        if (app.main.activebtnFB) {
                            app.main.getDatos(urlNext, idCM, tipoRS, lastID, true);
                        }

                    });
                } else {
                    //no hay mas posts y hay que cerrar la tarea
//                app.utils.trace("no hay mas posts");

                    app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoExito);
                }


            }
        });
    },
    loginTwitter: function () {
        OAuth.popup('twitter').done(function (twitter) {
            //            app.utils.trace("oauth done throu twitter");
            //RS facebook 
            app.main.responseTwitter = twitter;
            //            app.main.actualRStwitter = 2;
            app.visual.pedirTareasRS(app.main.actualRStwitter);


        }).fail(function (err) {
            //todo when the OAuth flow failed
            app.visual.mostrarStatusBtn($(".btnConnectTW").parent(), "alert", "Could not connect to twitter");
//            app.utils.trace("oauth fail twitter");
            //            app.utils.trace(err);
        });

    },
    getDatosTwitter: function (twitter, idCM, tipoRS, lastID) {

        //vaciamos la array temporalmente
        //app.main.tempArrayPosts = {};         var url = "";
        if (lastID == "" || lastID == null || lastID == 0) {
            url = 'https://api.twitter.com/1.1/statuses/user_timeline.json?count=100&user_id=' + idCM;
        } else {
            //distinto token a facebook
            //https://api.twitter.com/1.1/statuses/user_timeline.json?count=200&max_id=651424215858450400&user_id=42046651
            url = 'https://api.twitter.com/1.1/statuses/user_timeline.json?count=100&max_id=' + lastID + '&user_id=' + idCM;
        }
        if (app.main.activebtnTW) {

            app.main.twitterSubmit(twitter, url, idCM, tipoRS);
        }


    },
    twitterSubmit: function (twitter, url, idCM, tipoRS) {

        app.main.tempArrayTwitts = [];
        twitter.get(url).done(function (response) {
//            console.log("twitter done");
            //            console.log(response);
            //creamos una array donde va a venir los datos de los posts
            if (app.main.activebtnFB) {
                $(".btnConnectTW").parent().find(".txtStatus").text(TEXTOS.T03);
            }
            var len = response.length;
            var lastTwitt = null;
            for (var i = 0; i < len; i++) {

                app.main.countTW = app.main.countTW + 1;
                $(".countTW").text(app.main.countTW);


                var objPost = {
                    codigoPost: "",
                    texto: "",
                    numSharer: 0,
                    numLikes: 0,
                    numComentarios: 0,
                    fecha: "",
                    numAmigosCM: 0,
                    postUrl: "",
                    multimedia: "",
                    tipoPost: "",
                    nextPageToken: ""

                };
                //                app.utils.trace("recoremos array con twitts");

                objPost.codigoPost = response[i].id;
                objPost.texto = response[i].text;
                objPost.numSharer = parseInt(response[i].retweet_count);
                objPost.numLikes = parseInt(response[i].favorite_count);
                objPost.fecha = app.utils.convertirFecha(response[i].created_at);
                objPost.numAmigosCM = parseInt(response[i].user.friends_count);
                var idP = response[i].id_str;

                objPost.postUrl = "https://twitter.com/CocaCola_es/status/" + idP;
                // response[i].entities.media[0].url;


                if (!!response[i].entities.media) {
                    if (response[i].entities.media.length != 0) {

                        objPost.tipoPost = "photo";
                        objPost.multimedia = response[i].entities.media[0].media_url;
                    }
                } else {
                    if (!!response[i].entities.urls) {
                        if (response[i].entities.urls.length != 0) {
                            //url del img 
                            objPost.tipoPost = "video";
                            objPost.multimedia = response[i].entities.urls[0].url;
                        }
                    }
                }


                lastTwitt = response[i].id;
                app.main.tempArrayTwitts.push(objPost);
            }

            //max_id es un paramentro del id de twitt desde que quieres recuperar twitts 
            //y twitter inclue este twitt desde que quieres rastrear
            //por eso al final siempre va a llegar un objeto con este twitt
            //            app.utils.trace("length of response " + len);

            if (len == 0 || len == 1 || len == "") {
                //ya no hay twitts

                //                app.utils.trace("no hay mas twitts");
                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoExito);
            } else {
                //hay twitts para gurdar y se puede seguir recuperar el resto
                app.ajax.guardarActividad(parseInt(idCM), parseInt(tipoRS), app.main.tempArrayTwitts, function () {
                    //pedimos siguintes 200 twiits
                    //                    app.utils.trace("lastTwitt " + lastTwitt);
                    var url = 'https://api.twitter.com/1.1/statuses/user_timeline.json?count=100&user_id=' + idCM + '&max_id=' + lastTwitt;

                    if (app.main.activebtnTW) {
                        app.main.twitterSubmit(twitter, url, idCM, tipoRS);
                    }
                });
            }

        }).fail(function (err) {
            //todo when the OAuth flow failed
            //            app.utils.trace("twitter fail");
            console.log("fail twitter");
            console.log(err);
            if (err.status == 429) {
                //too many request , limit exceeded
                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoMaxPeticion);
                setTimeout(function () {
                    app.visual.pedirTareasRS(app.main.actualRStwitter);
                    //despues de 15 min llamamos la function 
                }, 900000);

            } else {
                ///otro error
                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoFail);
                app.visual.pedirTareasRS(app.main.actualRStwitter);
            }


        });
    },
    loginInstagram: function () {
        OAuth.popup('instagram').done(function (instagram) {
            //            app.utils.trace("oauth done through instagram");
            //RS facebook 
            app.main.responseInstagram = instagram;
            app.visual.pedirTareasRS(app.main.actualRSinstagram);


        }).fail(function (err) {
            //todo when the OAuth flow failed
            app.visual.mostrarStatusBtn($(".btnConnectIN").parent(), "alert", "Could not connect to instagram");
//            app.utils.trace("oauth fail instagram");
            //            app.utils.trace(err);
        });

    },
    getDatosInstagram: function (instagram, idCM, tipoRS, lastID) {
        var url;
        //vaciamos la array temporalmente
        //app.main.tempArrayPosts = {};         var url; 
        if (lastID == "" || lastID == null || lastID == 0) {
            url = 'https://api.instagram.com/v1/users/' + idCM + '/media/recent?count=100';
        } else {
            //distinto token a facebook
            // https://api.instagram.com/v1/users/1714804592/media/recent?count=200&max_id=1035522103283533559_1714804592
            url = 'https://api.instagram.com/v1/users/' + idCM + '/media/recent?count=100&max_id=' + lastID;
        }
        if (app.main.activebtnIN) {
            app.main.instagramSubmit(instagram, url, true, idCM, tipoRS);
        }


    },
    instagramGetNumSegidores: function (instagram, idCM) {

        instagram.get("https://api.instagram.com/v1/users/" + idCM + "").done(function (response) {

            app.main.numSuscriptIN = response.data.counts.followed_by;
            // console.log(response);
            // console.log("numSegidores " + app.main.numSuscriptIN);

        });


    },
    instagramSubmit: function (instagram, url, primeraPagina, idCM, tipoRS) {

        app.main.tempArrayInstagram = [];
        //var numAmigos = 0;

        if (primeraPagina) {
            app.main.instagramGetNumSegidores(instagram, idCM);
        }

        instagram.get(url).done(function (response) {
//            console.log("instagram done");
            //            console.log(response);
            if (app.main.activebtnIN) {
                $(".btnConnectIN").parent().find(".txtStatus").text(TEXTOS.T04);
            }
            //creamos una array donde va a venir los datos de los posts
            var len = response.data.length;
            //var lastTwitt = null;
            for (var i = 0; i < len; i++) {


                app.main.countIN = app.main.countIN + 1;
                $(".countIN").text(app.main.countIN);

                var objPost = {
                    codigoPost: "",
                    texto: "",
                    numSharer: 0,
                    numLikes: 0,
                    numComentarios: 0,
                    fecha: "",
                    numAmigosCM: app.main.numSuscriptIN,
                    postUrl: "",
                    multimedia: "",
                    tipoPost: "",
                    nextPageToken: ""


                };
//                console.log("cada objeto");
                //                console.log(response.data[i]);

                objPost.codigoPost = response.data[i].id;
                objPost.postUrl = response.data[i].link;
                var d = new Date(response.data[i].created_time * 1000);
                objPost.fecha = app.utils.convertirFecha(d);
                objPost.numLikes = parseInt(response.data[i].likes.count);
                objPost.numComentarios = parseInt(response.data[i].comments.count);
                objPost.tipoPost = response.data[i].type;
                //                objPost.numAmigosCM = parseInt(numAmigos);


                if (response.data[i].caption != null) {
                    if (!!response.data[i].caption.text) {
                        objPost.texto = response.data[i].caption.text;
                    }
                }



                if (response.data[i].type == "video") {
                    //objPost.multimedia = response.data[i].videos.standard_resolution.url;
                    objPost.multimedia = response.data[i].images.standard_resolution.url;
                } else if (response.data[i].type == "image") {
                    objPost.multimedia = response.data[i].images.standard_resolution.url;
                } else {

                }

                app.main.tempArrayInstagram.push(objPost);
            }

            if (!!response.pagination.next_url) {
                if (response.pagination.next_url != "") {
                    app.ajax.guardarActividad(parseInt(idCM), parseInt(tipoRS), app.main.tempArrayInstagram, function () {
                        var url = response.pagination.next_url;
                        if (app.main.activebtnIN) {
                            app.main.instagramSubmit(instagram, url, false, idCM, tipoRS);
                        }
                    });
                } else {
                    //                    console.log("no  variable");
                }
            } else {
                //                app.utils.trace("no hay mas posts");

                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoExito);
                //                console.log("no existe variable");
            }
            //            console.log("response.pagination.next_url" + response.pagination.next_url);
        }).fail(function (err) {
            //todo when the OAuth flow failed
            //            app.utils.trace("instagram fail");
            console.log("fail instagram");
            console.log(err);
            if (err.responseText.indexOf('429') != -1) {
                //	The maximum number of requests per hour has been exceeded.
                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoMaxPeticion);
                setTimeout(function () {
                    app.visual.pedirTareasRS(app.main.actualRSinstagram);
                    //despues de 10 min llamamos la function 
                }, 3600000);

            } else {
                ///otro error
                app.ajax.cerrarTarea(tipoRS, idCM, app.main.motivoFail);
                app.visual.pedirTareasRS(app.main.actualRSinstagram);
            }
        });
    },
    initYT: function () {
        gapi.client.setApiKey(app.main.ytApikey);
        gapi.client.load('youtube', 'v3');

    },
    getDatosYoutube: function (idCM, queRS, lastPost) {
        // console.log("recuperamos playlist del canal");

        app.main.getListChannels(idCM, queRS, lastPost);
    },
    getListChannels: function (idCM, queRS, lastPost) {
        app.main.numSubscriptoresYT = 0;
        gapi.client.youtube.channels.list({
            part: "contentDetails,statistics",
            id: idCM
//            forUsername:"oneDirection",

        }).execute(function (response) {
            var idPlaylist = response.items[0].contentDetails.relatedPlaylists.uploads;
            app.main.numSubscriptoresYT = response.items[0].statistics.subscriberCount;
//            console.log("idPlaylist");
//            console.log(idPlaylist);
            app.main.getPlaylistItems(idCM, queRS, idPlaylist, lastPost);
        });
    },
    getPlaylistItems: function (idCM, queRS, idPlaylist, pagToken) {
        var options;
        if (!!pagToken && pagToken != 0 && pagToken != "") {
            // console.log("hay mas paginas, paginamos");
            options = {
                part: "snippet",
                playlistId: idPlaylist,
                maxResults: 50,
                pageToken: pagToken
            };
        } else {
            // console.log("es la primera o la uniqua pagina");

            options = {
                part: "snippet",
                playlistId: idPlaylist,
                maxResults: 50
            };
        }

        gapi.client.youtube.playlistItems.list(options).execute(function (responseVideos) {

            var videos = responseVideos.items;
            app.main.tempArrayYoutTube = [];
            for (var i = 0; i < videos.length; i++) {

                app.main.countYT = app.main.countYT + 1;
                $(".countYT").text(app.main.countYT);


                var idVideo = videos[i].snippet.resourceId.videoId;
                var esUltimoVideo = false;
                var esFinal = false;

                if (i + 1 == videos.length) {
                    //es el ultimo video 
                    //console.log("i == lenght");
                    //console.log("es el ultimo video");
                    esUltimoVideo = true;
                }
                //console.log("responseVideos.nextPageToken");
                //console.log(responseVideos.nextPageToken);
                if (responseVideos.nextPageToken == null || responseVideos.nextPageToken == 'undefined') {
                    //console.log("es final de todo es la ultima pagina y hay que cerrar la tarea ");
                    esFinal = true;
                }

                app.main.getVideoDetalles(idCM, queRS, idVideo, esUltimoVideo, esFinal, function () {
//                    //si es ultimo y se ha guardado toda la array
                    if (!!responseVideos.nextPageToken && responseVideos.nextPageToken != "") {
                        //paginamos y tenemos recuperar otros playlist
                        // console.log("PEDIMOS SIGUIENTE PAGINA");
                        app.main.getPlaylistItems(idCM, queRS, idPlaylist, responseVideos.nextPageToken);
                    }

                });
            }




        });
    },
    getVideoDetalles: function (idCM, queRS, idVideo, esUltimo, esFinal, callback) {
        gapi.client.youtube.videos.list({
            part: "snippet,contentDetails,statistics",
            id: idVideo
        }).execute(function (responseDetails) {


            // console.log("get video detalles");
//            console.log(responseDetails);
            if (responseDetails.items.length > 0) {
                var elem = responseDetails.items[0];




                if (app.main.activebtnYT) {
                    $(".btnConnectYT").parent().find(".txtStatus").text(TEXTOS.T05);
                }
                var objPost = {
                    codigoPost: "",
                    texto: "",
                    numSharer: 0,
                    numLikes: 0,
                    numComentarios: 0,
                    fecha: "",
                    numAmigosCM: app.main.numSubscriptoresYT,
                    postUrl: "",
                    multimedia: "",
                    tipoPost: "video",
                    nextPageToken: ""

                };


                objPost.texto = elem.snippet.title;
                objPost.numLikes = parseInt(elem.statistics.likeCount) + parseInt(elem.statistics.dislikeCount);
                objPost.numComentarios = parseInt(elem.statistics.commentCount);
                objPost.multimedia = elem.snippet.thumbnails.high.url;
//          objPost.tipoPost = response.data[i].type;
                objPost.codigoPost = elem.id;
                objPost.fecha = app.utils.convertirFecha(elem.snippet.publishedAt);
                objPost.postUrl = "https://www.youtube.com/watch?v=" + objPost.codigoPost;
                if (!!responseDetails.nextPageToken) {
                    objPost.nextPageToken = responseDetails.nextPageToken;
                }

                //numAmigosCM: response.data(i).message

                app.main.tempArrayYoutTube.push(objPost);
                //console.log("es ultimo " + esUltimo);

                if (!!esUltimo) {
                    if (esUltimo) {
                        //console.log("idCM " + idCM + " queRS " + parseInt(queRS) + " app.main.tempArrayPosts ");
                        app.ajax.guardarActividad(idCM, parseInt(queRS), app.main.tempArrayYoutTube, function () {
                            //console.log("GUARDAMOS ACTIVIDAD");
                            if (!!callback) {
                                callback();
                            }

                            if (esFinal) {
                                // console.log("es final cerrar tarea");
                                app.ajax.cerrarTarea(queRS, idCM, app.main.motivoExito);
                            }
                        });
                    }
                }
            }
        });
    }
};


app.navegacion = {};
app.utils = {
    trace: function () {
        try {
            for (var i = 0; i < arguments.length; i++)
                console.log(arguments[i]);
        } catch (err) {
        }
    }
    ,
    convertirFecha: function (fecha) {
        var mifecha = new Date(fecha);
        mifecha = mifecha.toLocaleDateString();
        return mifecha;
    }
};

app.ajax = {
    webServiceStringify: function (methodWS, datos, success, error) {
        var dataParse = JSON.stringify(datos);
        var parsedData = JSON.stringify({post: dataParse});
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: parsedData,
            url: app.main.site_URL + methodWS,
            success: function (data) {
                if (data.d.resultado.toLowerCase() == "ok") {
                    if (!!success) {
                        success(data);
                    }
                } else {
                    if (!!error) {
                        error(data);
                    }
                }
            },
            error: function (e) {
//                app.utils.trace(e);
                //                app.utils.trace("failed ws");
            }
        });
    },
    webService: function (methodWS, datos, success, error) {


        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(datos),
            url: app.main.site_URL + methodWS,
            success: function (data) {
                if (data.d.resultado.toLowerCase() == "ok") {
                    if (!!success) {
                        success(data);
                    }
                } else {
                    if (!!error) {
                        error(data);
                    }
                }
            },
            error: function (e) {
//                app.utils.trace(e);
                //                app.utils.trace("failed ws");
            }
        });
    },
    dameTarea: function (tipo, callback, error) {

        //app.visual.precargaSoporteOnOff(true);
        // console.log("dame Tarea tipo " + tipo);
        var datos = {"tipoRS": tipo};
        app.ajax.webService("dameTarea", datos,
                function (data) {
                    //success
                    //console.log(data);
                    if (!!callback) {
                        callback(data);
                    }

                    if (data.d.data.codigo == -1) {
                        //All tasks are asigned."
                        setTimeout(function () {
                            app.visual.pedirTareasRS(tipo);
                        }, 600000);
                    }
                },
                function (data) {
                    //error


                    if (!!error) {
                        error(data);
                    }
                });
    },
    guardarActividad: function (IDperfilCM, tipoRS, arrPosts, callback) {
        //console.log(arrPosts);
        //app.visual.precargaSoporteOnOff(true);
        var datos = {"codigoCM": IDperfilCM, "tipoRS": tipoRS, "posts": arrPosts};
        app.ajax.webServiceStringify("guardarActividad", datos,
                function (data) {
                    //success
                    app.utils.trace("ok guardar");


                    if (!!callback) {
                        callback();
                    }
                },
                function (data) {
                    //error
//                    if (tipoRS == 1) {
//                        app.visual.mostrarStatusBtn($(".btnConnectFB").parent(), "alert", data.d.data.mensaje);
//                    } else if (tipoRS == 2) {
//                        app.visual.mostrarStatusBtn($(".btnConnectTW").parent(), "alert", data.d.data.mensaje);
//                    } else {
//                        app.visual.mostrarStatusBtn($(".btnConnectIN").parent(), "alert", data.d.data.mensaje);
//                    }
                    app.ajax.cerrarTarea(tipoRS, IDperfilCM, app.main.motivoFail);
                    app.visual.pedirTareasRS(tipoRS);
                    //                    app.utils.trace("ko guardar");
                });
    },
    cerrarTarea: function (tipo, codigoCM, motivoCiere) {

        //app.visual.precargaSoporteOnOff(true);
        var datos = {"tipoRS": tipo, "codigoCM": codigoCM, "motivoCierre": motivoCiere};
        app.ajax.webService("cerrarTarea", datos,
                function (data) {
                    //success
                    var bloque;
                    switch (tipo) {
                        case 1:
                            bloque = $(".btnConnectFB").parent();
                            if (motivoCiere == 1) {
                                app.visual.pedirTareasRS(app.main.actualRSfacebook);
                            }

                            break;
                        case 2:
                            bloque = $(".btnConnectTW").parent();
                            if (motivoCiere == 1) {
                                app.visual.pedirTareasRS(app.main.actualRStwitter);
                            }
                            break;

                        case 3:
                            bloque = $(".btnConnectIN").parent();
                            if (motivoCiere == 1) {
                                app.visual.pedirTareasRS(app.main.actualRSinstagram);
                            }
                            break;

                        case 4:
                            bloque = $(".btnConnectYT").parent();
                            if (motivoCiere == 1) {
                                app.visual.pedirTareasRS(app.main.actualRSyoutube);
                            }
                            break;
                    }

//                    if (motivoCiere == 1) {
//                        app.visual.mostrarStatusBtn(bloque, "off", "");
//                    }

                },
                function (data) {
                    //error
                });
    }

};

app.visual = {
    mostrarStatusBtn: function (bloque, state, text) {
        switch (state) {
            case "on":
                $(bloque).removeClass("connected alert");
                $(bloque).addClass("connected");
                break;
            case "off":
                $(bloque).removeClass("connected alert");
                break;

            case "alert":
                $(bloque).removeClass("connected alert");
                $(bloque).addClass("alert");
                break;
        }

        $(bloque).find(".txtStatus").text("");
        $(bloque).find(".txtStatus").text(text);

    },
    pedirTareasRS: function (queRS) {
        if (queRS == 1) {
            if (app.main.activebtnFB) {
                app.ajax.dameTarea(queRS,
                        function (data) {
                            //callback de la function dameTarea (cuando servidor devuelve idCM puedemos arastrar posts )
//                    app.utils.trace("callback dameTarea");
                            //                    app.utils.trace(data.d.data.codigoCM);
                            app.main.IDfacebookActualCM = parseInt(data.d.data.codigoCM);
                            var lastID = data.d.data.ultimoPostId;
                            //var lastFecha_dateStamp = data.data.ultimaFechaPost;
                            app.main.crearURlFacebook(app.main.IDfacebookActualCM, queRS, lastID);


                        }, function (data) {
                    //ko del servidor
                    app.visual.mostrarStatusBtn($(".btnConnectFB").parent(), "alert", data.d.data.mensaje);
                })
            }

        } else if (queRS == 2) {
            if (app.main.activebtnTW) {
                app.ajax.dameTarea(queRS,
                        function (data) {
                            //callback de la function dameTarea (cuando servidor devuelve idCM puedemos arastrar posts )
//                        app.utils.trace("callback dameTarea");
                            //                        app.utils.trace(data.d.data.codigoCM);
                            app.main.IDtwitterActualCM = data.d.data.codigoCM;
                            var lastPost = data.d.data.ultimoPostId;

                            app.main.getDatosTwitter(app.main.responseTwitter, app.main.IDtwitterActualCM, queRS, lastPost);

                        }, function (data) {
                    //ko del servidor
                    app.visual.mostrarStatusBtn($(".btnConnectTW").parent(), "alert", data.d.data.mensaje);
                }
                );
            }
        } else if (queRS == 3) {
            if (app.main.activebtnIN) {
                app.ajax.dameTarea(queRS, function (data) {
                    app.main.IDinstagramActualCM = data.d.data.codigoCM;
                    var lastPost = data.d.data.ultimoPostId;

                    app.main.getDatosInstagram(app.main.responseInstagram, app.main.IDinstagramActualCM, queRS, lastPost);

                }, function (data) {
                    //ko del servidor
                    app.visual.mostrarStatusBtn($(".btnConnectIN").parent(), "alert", data.d.data.mensaje);
                }
                );
            }
        } else {
            if (app.main.activebtnYT) {
                app.ajax.dameTarea(queRS, function (data) {
                    app.main.IDYoutubeActualCM = data.d.data.codigoCM;
                    var lastPost = data.d.data.ultimoPostId;

                    app.main.getDatosYoutube(app.main.IDYoutubeActualCM, queRS, lastPost);

                }, function (data) {
                    //ko del servidor
                    app.visual.mostrarStatusBtn($(".btnConnectYT").parent(), "alert", data.d.data.mensaje);
                }
                );
            }
        }





    }};


TEXTOS = {
    T01: "Connecting ... It may takes some time",
    T02: "Tracking data from facebook ...",
    T03: "Tracking data from twitter ...",
    T04: "Tracking data from instagram ...",
    T05: "Tracking data from youtube ..."

};


document.addEventListener('DOMContentLoaded', function () {
    app.main.init();
});